# This file is for secrets such as passwords and access tokens.
#
# While this file is committed to git in plain text for illustrative
# purposes, that would be bad practice in a production
# environment. More appropriate options for managing secrets include
# the following:
#
#    - Use a tool like git-secret or ansible vault to keep secrets
#      in the git repository, protected by encryption.
#
#    - Keep the secrets file somewhere outside of the git repository;
#      reference the full path in the playbook, or add it on the
#      command line with --extra-vars @/path/to/secrets-file


# Generate a random password and paste it in here. The database will
# be set up to require this password, and ingrid will be set up to use
# it. To change the password on both the server and the client, just
# change this field and run the playbook.
ingrid_postgres_password: ABCDEFG

# If you use docker images that aren't public, provide a docker hub
# access key here. It will be stored unencrypted on the server. Most
# sites don't need this.
#
# Example:
#
#     docker_hub_access_token: fill-me-in

# If your dlentries and maproom repositories require authentication to
# pull, configure a read-only access key for them and set the ansible
# variable git_key to the content of the private key.
# Instructions for generating an access key for bitbucket:
# https://confluence.atlassian.com/bitbucket/access-keys-294486051.html
#
# Example:
#
#     git_key: |
#       -----BEGIN RSA PRIVATE KEY-----
#       xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#       xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#       -----END RSA PRIVATE KEY-----
#
# The repositories used by the test playbook are public, so no access
# key is needed.
